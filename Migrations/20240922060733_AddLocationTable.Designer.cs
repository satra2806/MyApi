// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyApi.Models;

#nullable disable

namespace MyApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240922060733_AddLocationTable")]
    partial class AddLocationTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MyApi.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AirportCode")
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CostCenterCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DistrictOfficeGroup")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FacType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FacilityLocation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LookupFacilityLocId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Runway")
                        .HasColumnType("longtext");

                    b.Property<string>("SdpFacType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SdpFacilityLocation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ServiceArea")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SystemSupportCenter")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TechOpsDistrictOffice")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tier")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("locationTbl");
                });

            modelBuilder.Entity("MyApi.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Assumptions")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Benefits")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Constraints")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OriginatorROM")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProblemStatement")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProcessType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProposedSolution")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("ProjectCordinatortbl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DropDownLabel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DropdownValues")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ProjectCordinatortbl");
                });

            modelBuilder.Entity("projectPlanningtbl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DropDownLabel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DropdownValues")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("dropDownNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("projectPlanningtbl");
                });
#pragma warning restore 612, 618
        }
    }
}
